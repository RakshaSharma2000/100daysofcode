QUESTION OF THE DAY:
Java Exception Handling
DESCRIPTION:
Exception Handling in Java is one of the effective means to handle the runtime errors so that the regular flow of the application can be preserved. 
Java Exception Handling is a mechanism to handle runtime errors such as ClassNotFoundException, IOException, SQLException, RemoteException, etc.
Exception is an unwanted or unexpected event, which occurs during the execution of a program, i.e. at run time, that disrupts the normal flow of the programâ€™s 
instructions.
Exceptions can be caught and handled by the program. When an exception occurs within a method, it creates an object. This object is called the exception object. 
It contains information about the exception, such as the name and description of the exception and the state of the program when the exception occurred.
CODE SOLUTION:
import java.util.Scanner;
class MyCalculator {
    long power(int n ,int p)throws Exception
    {
        if(n<0 || p<0)
        throw new Exception("n or p should not be negative.");
        else if(n == 0 && p == 0)
        throw new Exception("n and p should not be zero.");
        else
        return(long)Math.pow(n,p);
    }
}

public class Solution {
    public static final MyCalculator my_calculator = new MyCalculator();
    public static final Scanner in = new Scanner(System.in);
    
    public static void main(String[] args) {
        while (in .hasNextInt()) {
            int n = in .nextInt();
            int p = in .nextInt();
            
            try {
                System.out.println(my_calculator.power(n, p));
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }
}
Sample Input 

3 5
2 4
0 0
-1 -2
-1 3
Sample Output 

243
16
java.lang.Exception: n and p should not be zero.
java.lang.Exception: n or p should not be negative.
java.lang.Exception: n or p should not be negative.
